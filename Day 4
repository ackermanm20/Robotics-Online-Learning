// Created on Mon March 23 2020
		
int l_motor = 0;  					// left motor is port 0
int r_motor = 2; 					 // right motor is port 2
int speed = 30;							// motor speed is 30
int r_touch = 9; 	
int l_touch = 8;					// right touch sensor is port 9
int l_reflect = 5;							// left reflectance sensor is port 5
int r_reflect = 6;

int main(){
	adjust();								// intial adjustment turn, repositions the robot
while(digital(r_touch) == 0) {  			// the bot moves forward until the right touch sensor hits the far wall
    forward();                   
  if(analog(l_reflect) > 0) {    			// if the bot is too far to the left and picks up the tape, the if statement makes it veer right
    veerRight();
}
  }
    finalTurn();	 					 // final adjustment turn
     while(digital(r_touch) == 0) {           // the bot moves forward until the left touch sensor hits the wall 
		forward();
if(analog(l_reflect) == 0) {         	 // if the left reflectance sensor is outside of the tape's range, move right to counter that
	veerRight();
}
if(analog(r_reflect) == 0) {       		 // if the right reflectance is outside of the tape's range, move left to counter
	veerLeft();
}
  }
  adjust2(); 								// second adjustment is called after while loop exits
while((analog(r_reflect)) == 0 && ((analog(l_reflect)) == 0)) { 	// once both reflectance sensors activated, stop (stops bot from premature exit)
	forward();
if(digital(r_touch) == 0) {					// if the wall is not activating the right bump sensor, veer right
	veerRight();
	
}		
if(digital(r_touch) == 1) {					// if the wall is detected, veer left, makes the bot wiggle back and forth along the wall
		veerLeft();
	}										
  }
  adjust3();						// last adjustment
  }
// Functions
void forward() {            			// both motors moving forward at the same speed
    motor(l_motor, speed);  
    motor(r_motor, speed);
}
void adjust() {               			 // intial adjustment turn
    motor(l_motor, speed);    		
    motor(r_motor, -speed); 
	msleep(525);
}
void adjust2() {             			 // second adjustment 
	motor(l_motor, -speed);
	motor(r_motor, -speed);
	msleep(225);
	motor(r_motor, speed);
	motor(l_motor, -speed);
	msleep(1300);
}
void veerRight(){
	motor(l_motor, speed);    			 // right veer, right motor at 15 less speed than left motor
	motor(r_motor, speed-20);
}
void veerLeft(){
	motor(l_motor, speed-20);  		   // right veer, right motor at 15 less speed than left motor
	motor(r_motor, speed);
}
void finalTurn(){						// final turn, bot backs up slightly, then turns to face the tape
	motor(l_motor,-speed);
	motor(r_motor,-speed);
	msleep(400);
	motor(l_motor,-speed);
	motor(r_motor,speed);
	msleep(1400);
}
void adjust3(){									// last adjustment
	forward();
	msleep(200);
}
